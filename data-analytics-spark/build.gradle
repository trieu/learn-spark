
apply plugin: 'scala'
apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8

version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compile (    		
    		// common 	
    		'org.apache.spark:spark-core_2.11:1.3.1'
			,'org.apache.spark:spark-sql_2.11:1.3.1'
			,'org.apache.spark:spark-mllib_2.11:1.3.1'
		//	,'org.apache.spark:spark-graphx_2.11:1.3.0'			
		)
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

def getClasspathStringJars() {
	def baseFolder = 'deps/'
    def fileNames = []
    configurations.compile.each { File file -> fileNames.add(baseFolder + file.name) }
    
    def classpath = fileNames.join(" ; ")    
    return '. ; ' + classpath + ' ; '
}

task printClasspathStringJars << {   
    println getClasspathStringJars()
}

task copyRuntimeLibs(type: Copy) {  
  into "build/libs/deps"  
  from configurations.compile  
}

task jarSparkWorker(type: Jar) {	
	dependsOn classes   
	from(sourceSets.main.output) {
        include "**"
    }
    version = '1.0'
    baseName = 'spark-worker'
    manifest {
   		attributes ('Implementation-Title': 'VisitorViewableEventJob', 
        			'Implementation-Version': version ,
        			'Main-Class': 'dw.job.click.VisitorViewableEventJob',
        			'Class-Path' : getClasspathStringJars() 
        			)
	}
}
